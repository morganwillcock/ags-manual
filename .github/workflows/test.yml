name: Build test

on:
  - push
  - pull_request
  - workflow_dispatch

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        with-feature:
          - --with-chmcmd
        shell:
          - bash
        os:
          - macos-latest
          - ubuntu-latest
        include:
          - os: windows-latest
            shell: msys2 {0}
            with-feature: --with-chmcmd
          - os: windows-latest
            shell: msys2 {0}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: ${{ matrix.shell }}
    env:
      MSYS: winsymlinks:nativestrict
    steps:
      - name: Checkout repository and submodules
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Setup msys2
        if: ${{ runner.os == 'Windows' }}
        uses: msys2/setup-msys2@v2
        with:
          msystem: MSYS
          update: true
          install: >-
            base-devel
            git
      - name: Download and install Pandoc
        run : |
          case ${{ runner.os }} in
              macOS)
                  pandoc=pandoc-2.9.2/bin/pandoc
                  suffix=macOS.zip
                  tar=bsdtar
                  ;;
              Linux)
                  pandoc=pandoc-2.9.2/bin/pandoc
                  suffix=linux-amd64.tar.gz
                  tar=tar
                  ;;
              Windows)
                  pandoc=pandoc-2.9.2/pandoc.exe
                  suffix=windows-x86_64.zip
                  tar=/c/Windows/System32/tar.exe
                  ;;
              *)
                  exit 1
                  ;;
          esac
          url="https://github.com/jgm/pandoc/releases/download/2.9.2/pandoc-2.9.2-$suffix"
          curl -fL "$url" | $tar -f - -vxzC "${{ runner.temp }}" "$pandoc"
          chmod +x "${{ runner.temp }}/$pandoc"
          echo PANDOC="${{ runner.temp }}/$pandoc" >> $GITHUB_ENV
      - name: Download and install HTML Help Workshop
        if: ${{ runner.os == 'Windows' }}
        shell: cmd
        env:
          CHECKSUM: b2b3140d42a818870c1ab13c1c7b8d4536f22bd994fa90aade89729a6009a3ae
          HHC: C:\Program Files (x86)\HTML Help Workshop\hhc.exe
          URL: https://web.archive.org/web/20200918004813/https://download.microsoft.com/download/0/A/9/0A939EF6-E31C-430F-A3DF-DFAE7960D564/htmlhelp.exe
        run: |
          %COMSPEC% /c "pushd "${{ runner.temp }}" && curl -fLOJ "%URL%"" || exit /b 1

          for /f %%a in ('certutil -hashfile "${{ runner.temp }}\htmlhelp.exe" SHA256 ^| find /v " "') do set SHA256=%%a
          if not "%SHA256%" == "%CHECKSUM%" exit /b 1

          "${{ runner.temp }}\htmlhelp.exe" /Q /T:"${{ runner.temp }}\htmlhelp" /C
          > "${{ runner.temp }}\htmlhelp\htmlhelp_noupdate.inf" findstr /v /b """hhupd.exe "${{ runner.temp }}\htmlhelp\htmlhelp.inf"
          %SYSTEMROOT%\SysWOW64\rundll32.exe advpack.dll,LaunchINFSection "${{ runner.temp }}\htmlhelp\htmlhelp_noupdate.inf",,3,N
          if not exist "%HHC%" exit /b 1

          echo HHC=%HHC%>> %GITHUB_ENV%
      - name: Update Autotools
        run: |
          case ${{ runner.os }} in
              macOS)
                  brew update
                  brew install automake
                  ;;
              Linux)
                  (cd "${{ runner.temp }}" && curl -fLOJ http://ftp.debian.org/debian/pool/main/a/autoconf/autoconf_2.71-1_all.deb)
                  sudo dpkg -i "${{ runner.temp }}/autoconf_2.71-1_all.deb"
                  ;;
              Windows)
                  ;;
              *)
                  exit 1
                  ;;
          esac
      - name: Install Free Pascal CHM compiler
        if: ${{ matrix.with-feature != null }}
        run: |
          case ${{ runner.os }} in
              macOS)
                  brew update
                  brew install fpc
                  ;;
              Linux)
                  cd "${{ runner.temp }}" && \
                      curl -fLSs https://sourceforge.net/projects/freepascal/files/Linux/3.2.2/fpc-3.2.2.x86_64-linux.tar/download | \
                      tar -Oxf - fpc-3.2.2.x86_64-linux/binary.x86_64-linux.tar | \
                      tar -Oxf - units-chm.x86_64-linux.tar.gz | \
                      tar -xvzf - bin/chmcmd
                  >> $GITHUB_ENV echo CHMCMD="${{ runner.temp }}/bin/chmcmd"
                  ;;
              Windows)
                  cd "${{ runner.temp }}" && \
                      curl -fLOJ https://sourceforge.net/projects/freepascal/files/Win32/3.2.2/fpc-3.2.2.i386-win32.exe/download && \
                      ./fpc-3.2.2.i386-win32.exe //sp- //verysilent //norestart
                  >> $GITHUB_ENV echo CHMCMD="/c/FPC/3.2.2/bin/i386-win32/chmcmd.exe"
                  ;;
              *)
                  exit 1
                  ;;
          esac
      - name: bootstrap
        run: ./bootstrap
      - name: configure
        run: >
          mkdir build &&
          cd build &&
          ../configure --prefix=/usr/local ${{ matrix.with-feature }}
      - name: distcheck
        env:
          DISTCHECK_CONFIGURE_FLAGS: ${{ matrix.with-feature }}
        run: >
          cd build &&
          make -j $(getconf _NPROCESSORS_ONLN) distcheck
      - name: stage installation
        run: >
          cd build &&
          make -j $(getconf _NPROCESSORS_ONLN) DESTDIR=destdir install
      - name: Upload website
        if: ${{ matrix.with-feature != null }}
        uses: actions/upload-artifact@v2
        with:
          name: website_${{ runner.os }}_2.9.2
          path: build/destdir/usr/local/share/ags-manual/website
          if-no-files-found: error
      - name: Upload CHM file
        uses: actions/upload-artifact@v2
        with:
          name: chm_${{ runner.os }}_2.9.2${{ matrix.with-feature }}
          path: build/destdir/usr/local/share/ags-manual/*.chm
          if-no-files-found: error
  check:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: Compare website artifacts
        run: |
          dirs=$(echo website_*)
          count=$(echo "$dirs" | wc -w)

          if [ "$count" -lt 2 ]; then
              echo "Nothing to compare"
              exit 0
          fi

          echo "Comparing $count directories"
          first=${dirs%% *}
          rest=${dirs#* }
          rc=0

          for r in $rest; do
              echo "Comparing '$first' to '$r'"
              diff -r $first $r || rc=1
          done

          exit $rc
        working-directory: artifacts
