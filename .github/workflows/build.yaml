name: Build manual

on:
  - push
  - pull_request
  - workflow_dispatch

jobs:
  build:
    runs-on: ${{ matrix.os }}
    outputs:
      output1: ${{ steps.checksum.outputs.CONTENT_CHECKSUM }}
    defaults:
      run:
        shell: ${{ matrix.shell }}
        working-directory: ags-manual
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
          - ubuntu-latest
          - windows-latest
        pandoc:
          - 2.9.1
        shell:
          - bash
        include:
          - os: windows-latest
            pandoc: 2.9.1
            shell: cmd
            make_vars: SHELL=%COMSPEC%
    steps:
      - name: Checkout build system
        uses: actions/checkout@v2
        with:
          path: ags-manual
      - name: Checkout wiki
        uses: actions/checkout@v2
        with:
          repository: morganwillcock/ags-manual.wiki
          path: ags-manual.wiki
      - name: Set path to Markdown files (BASH)
        if: ${{ matrix.shell == 'bash' }}
        working-directory: ags-manual.wiki
        run: echo "CHECKOUTDIR=$(pwd)" >> $GITHUB_ENV
      - name: Set path to Markdown files (ComSpec)
        if: ${{ matrix.shell == 'cmd' }}
        working-directory: ags-manual.wiki
        run: echo CHECKOUTDIR=%CD%>> %GITHUB_ENV%
      - name: Upgrade ezwinport make
        if: ${{ matrix.shell == 'cmd' }}
        run: |
          mkdir "${{ runner.temp }}\make"
          %COMSPEC% /c "pushd "${{ runner.temp }}" && ^
            curl -fLOJ https://downloads.sourceforge.net/project/ezwinports/make-4.3-without-guile-w32-bin.zip"
          tar -f make-4.3-without-guile-w32-bin.zip -xvC "${{ runner.temp }}\make"
          echo ${{ runner.temp }}\make\bin>> %GITHUB_PATH%
      - name: Get Markdown files
        run: make ${{ matrix.make_vars }} source
      - name: Download and install Pandoc
        shell: bash
        run: |
          case "${{ runner.os }}" in
            Linux)
              pandoc="pandoc-${{ matrix.pandoc }}/bin/pandoc"
              suffix=linux-amd64.tar.gz
              tar=tar
              ;;
            macOS)
              pandoc="pandoc-${{ matrix.pandoc }}/bin/pandoc"
              suffix=macOS.zip
              tar=bsdtar
              ;;
            Windows)
              pandoc=pandoc.exe
              suffix=windows-x86_64.zip
              tar=/c/Windows/System32/tar.exe
              ;;
            *)
              exit 1
              ;;
          esac
          url="https://github.com/jgm/pandoc/releases/download/${{ matrix.pandoc }}/pandoc-${{ matrix.pandoc }}-$suffix"
          curl -fL "$url" | $tar -f - -vxzC "${{ runner.temp }}" "$pandoc"
          chmod +x "${{ runner.temp }}/$pandoc"
          echo PANDOC="${{ runner.temp }}/$pandoc" >> $GITHUB_ENV
      - name: Check Markdown files (BASH)
        if: matrix.shell == 'bash'
        run: |
          set +e
          (! make -j $(getconf _NPROCESSORS_ONLN) metacheck 2>&1 >/dev/null | grep ^ERROR)
      - name: Build website
        run: make ${{ matrix.make_vars }} html
      - name: Generate checksum
        id: checksum
        run: echo "::set-output name=CONTENT_CHECKSUM::${{ hashFiles('ags-manual/html/build/**') }}"
      - name: Upload website
        if: false
        uses: actions/upload-artifact@v2
        with:
          name: html (${{ matrix.os }}-${{ matrix.shell }})
          path: ags-manual/html/build
          if-no-files-found: error
      - name: Build HTML Help Project
        run: make ${{ matrix.make_vars }} htmlhelp
      - name: Upload HTML Help Project
        if: false
        uses: actions/upload-artifact@v2
        with:
          name: htmlhelp (${{ matrix.os }}-${{ matrix.shell }})
          path: ags-manual/htmlhelp/build
          if-no-files-found: error
      - name: Download and install HTML Help Workshop
        if: startsWith(matrix.os, 'windows-')
        shell: cmd
        env:
          CHECKSUM: b2b3140d42a818870c1ab13c1c7b8d4536f22bd994fa90aade89729a6009a3ae
          HHC: C:\Program Files (x86)\HTML Help Workshop\hhc.exe
          URL: https://download.microsoft.com/download/0/A/9/0A939EF6-E31C-430F-A3DF-DFAE7960D564/htmlhelp.exe
        run: |
          %COMSPEC% /c "pushd "${{ runner.temp }}" && curl -fLOJ "%URL%"" || exit /b 1

          for /f %%a in ('certutil -hashfile "${{ runner.temp }}\htmlhelp.exe" SHA256 ^| find /v " "') do set SHA256=%%a
          if not "%SHA256%" == "%CHECKSUM%" exit /b 1

          "${{ runner.temp }}\htmlhelp.exe" /Q /T:"${{ runner.temp }}\htmlhelp" /C
          > "${{ runner.temp }}\htmlhelp\htmlhelp_noupdate.inf" findstr /v /b """hhupd.exe "${{ runner.temp }}\htmlhelp\htmlhelp.inf"
          %SYSTEMROOT%\SysWOW64\rundll32.exe advpack.dll,LaunchINFSection "${{ runner.temp }}\htmlhelp\htmlhelp_noupdate.inf",,3,N
          if not exist "%HHC%" exit /b 1

          echo HHC=%HHC%>> %GITHUB_ENV%
      - name: Build CHM file
        if: env.HHC
        run: make ${{ matrix.make_vars }} chm
      - name: Upload CHM file
        if: false
        #if: env.HHC
        uses: actions/upload-artifact@v2
        with:
          name: ags-help.chm (${{ matrix.os }}-${{ matrix.shell }})
          path: ags-manual/htmlhelp/build/ags-help.chm
          if-no-files-found: error
  check:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - run: echo '${{ toJSON(needs.*.outputs.output1) }}'
